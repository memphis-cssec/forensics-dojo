#!/usr/bin/env python-dojo-suid

import pathlib
import random
import csv

global studentLineCSV
global flag

config = (pathlib.Path(__file__).parent / ".config").read_text()
level = int(config)

def get_random_line(afile):
    """Return a random line from the file (or default)."""
    line = ''
    for i, aline in enumerate(afile, start=1):
        if random.randrange(i) == 0:  # random int [0..i)
            line = aline
    return line

def readans(str):
    return str.strip()

with open("/flag") as f:
    buf=f.read()
    random.seed(buf)
    flag = str(buf)

datasetfname = "/data/new-york-accidents.csv"

with open(datasetfname) as csvfile:
    global studentLineCSV
    studentLineCSV = str(get_random_line(csvfile))

def wordFieldCount(word, field):
    sum = 0
    with open(datasetfname) as csvfile:
         reader = csv.reader(csvfile, delimiter=",")
         for row in reader:
             tword = row[field]
             if tword == word:
                 sum += 1
    return sum
    

def wordCount(word):
    with open(datasetfname) as csvfile:
         csvfile = csvfile.read()     
         return csvfile.count(word)


def level1():
    global studentLineCSV
    print("level1")
    studentLineArray = studentLineCSV.split(',')
    date = studentLineArray[1]
    time = studentLineArray[2]
    street = studentLineArray[9].strip().lower()
    val = input(f"In which borough did the accident on {date} at {time} on a street naned '{street}' take place?").strip()
    if val == studentLineArray[3]:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")

def level2():
    global studentLineCSV
    print("level2") 
    studentLineArray = studentLineCSV.split(',')
    borough = studentLineArray[3]
    val = input(f"how many times does the borough {borough} appear in the dataset?")
    if int(val) == int(wordFieldCount(studentLineArray[3], 3)):
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")

#how many rows share the year?
def level3():
    print("level3")
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    count = 0 
    date = studentLineArray[1]
    with open(datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        for row in readerObj:
            rowString = row[1]
            if date in rowString:
                count += 1

    val = input(f"how many rows share the exact same date as {date}?")
   
    if int(val) == count:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")

def level4():
    print("level4")
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    count = 0 
    date = studentLineArray[1]
    borough = studentLineArray[3]
    with open(datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        for row in readerObj:
           rowString = row[1]
           if date == row[1] and borough == row[3]:
               count += 1  
    
    val = input(f"how many rows share both the date {date} and the borough {borough} ?")
    if int(val) == count:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")

def level5():
    print("level 5")
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    count = 0 
    date = studentLineArray[1]
    with open(datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        for row in readerObj:
            rowString = row[1]
            if date not in rowString:
                count += 1
    val = input(f"how many rows do NOT have the following date: {date}?")
    if int(val) == count:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")
            
def level6():
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    if int(studentLineArray[0]) > 5:
        randNum = int(studentLineArray[0]) // 2
    else:
        randNum = int(studentLineArray[0]) + 264
    with open(datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        rows = list(readerObj)
        targetRow = rows[randNum]
    
    date = targetRow[1]
    time = targetRow[2]
    borough = targetRow[3]
    street = studentLineArray[9].strip().lower()
    val = input(f"which row has {date} as the date {time} as the time , {borough} as the borough and {street} as the street?").strip()
    if val == targetRow[0].strip():
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")
    
def level7():
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    time = studentLineArray[2]
    time = time.split(":")[0]
    count = 0
    hour = studentLineArray[2]
    with open (datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        for row in readerObj:
            rowhour = row[2].split(":")[0]
            if time == rowhour:
                count += 1   
            
    val = input(f"how many rows are in the same hour as {hour}?.\nFor example if the hour was 14:39 it means how many accidents occured between 2pm and 3pm.")
    if int(val) == count:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")

def level8():
    global studentLineCSV
    studentLineArray = studentLineCSV.split(',')
    date = studentLineArray[1]
    date = date[2:6]
    count = 0
    with open (datasetfname) as csvfile:
        readerObj = csv.reader(csvfile)
        for row in readerObj:
            if date in row[1]:
                count += 1
    day = str(date[1:3])
    val = input(f"How many accidents took place on the {day} (st/th) day of a month?")
    if int(val) == count:
        print(f"Correct: get your flag {flag}")
    else:
        print("try again")


def challenge():
    lvls = {
       1: level1,
       2: level2,
       3: level3,
       4: level4,
       5: level5,
       6: level6,
       7: level7,
       8: level8,
    }
    print(f"In these challenges you should examine the dataset located under {datasetfname} using standard unix tools")
    print("like grep, wc, awk etc. Good luck!")
    f = lvls[level]
    f()

challenge()
